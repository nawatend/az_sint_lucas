{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Player from '@vimeo/player';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar eventNames = {\n  play: 'onPlay',\n  pause: 'onPause',\n  ended: 'onEnd',\n  timeupdate: 'onTimeUpdate',\n  progress: 'onProgress',\n  seeked: 'onSeeked',\n  texttrackchange: 'onTextTrackChange',\n  cuechange: 'onCueChange',\n  cuepoint: 'onCuePoint',\n  volumechange: 'onVolumeChange',\n  error: 'onError',\n  loaded: 'onLoaded'\n};\n\nvar Vimeo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Vimeo, _React$Component);\n\n  function Vimeo(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Vimeo.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this; // eslint-disable-next-line react/destructuring-assignment\n\n\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.player.destroy();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      id: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      autopause: this.props.autopause,\n      autoplay: this.props.autoplay,\n      byline: this.props.showByline,\n      color: this.props.color,\n      controls: this.props.controls,\n      loop: this.props.loop,\n      portrait: this.props.showPortrait,\n      title: this.props.showTitle,\n      muted: this.props.muted,\n      background: this.props.background,\n      responsive: this.props.responsive\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    var player = this.player;\n    propNames.forEach(function (name) {\n      // eslint-disable-next-line react/destructuring-assignment\n      var value = _this3.props[name];\n\n      switch (name) {\n        case 'autopause':\n          player.setAutopause(value);\n          break;\n\n        case 'color':\n          player.setColor(value);\n          break;\n\n        case 'loop':\n          player.setLoop(value);\n          break;\n\n        case 'volume':\n          player.setVolume(value);\n          break;\n\n        case 'paused':\n          player.getPaused().then(function (paused) {\n            if (value && !paused) {\n              return player.pause();\n            }\n\n            if (!value && paused) {\n              return player.play();\n            }\n\n            return null;\n          });\n          break;\n\n        case 'width':\n        case 'height':\n          player.element[name] = value;\n          break;\n\n        case 'video':\n          if (value) {\n            var start = _this3.props.start;\n            player.loadVideo(value); // Set the start time only when loading a new video.\n\n            if (typeof start === 'number') {\n              player.setCurrentTime(start);\n            }\n          } else {\n            player.unload();\n          }\n\n          break;\n\n        default: // Nothing\n\n      }\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var _this$props = this.props,\n        start = _this$props.start,\n        volume = _this$props.volume;\n    this.player = new Player(this.container, this.getInitialOptions());\n    Object.keys(eventNames).forEach(function (dmName) {\n      var reactName = eventNames[dmName];\n\n      _this4.player.on(dmName, function (event) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var handler = _this4.props[reactName];\n\n        if (handler) {\n          handler(event);\n        }\n      });\n    });\n    var onReady = this.props.onReady;\n\n    if (onReady) {\n      this.player.ready().then(function () {\n        onReady(_this4.player);\n      });\n    }\n\n    if (typeof start === 'number') {\n      this.player.setCurrentTime(start);\n    }\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        id = _this$props2.id,\n        className = _this$props2.className;\n    return React.createElement(\"div\", {\n      id: id,\n      className: className,\n      ref: this.refContainer\n    });\n  };\n\n  return Vimeo;\n}(React.Component);\n\nif (process.env.NODE_ENV !== 'production') {\n  Vimeo.propTypes = {\n    /**\n     * A Vimeo video ID or URL.\n     */\n    video: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n\n    /**\n     * The playback volume as a number between 0 and 1.\n     */\n    volume: PropTypes.number,\n\n    /**\n     * The time in seconds at which to start playing the video.\n     */\n    start: PropTypes.number,\n    // Player parameters\n\n    /**\n     * Pause this video automatically when another one plays.\n     */\n    autopause: PropTypes.bool,\n\n    /**\n     * Automatically start playback of the video. Note that this wonâ€™t work on\n     * some devices.\n     */\n    autoplay: PropTypes.bool,\n\n    /**\n     * Show the byline on the video.\n     */\n    showByline: PropTypes.bool,\n\n    /**\n     * Specify the color of the video controls. Colors may be overridden by the\n     * embed settings of the video. _(Ex: \"ef2f9f\")_\n     */\n    color: PropTypes.string,\n    // Player controls\n\n    /**\n     * Hide all elements in the player (play bar, sharing buttons, etc).\n     */\n    controls: PropTypes.bool,\n\n    /**\n     * Play the video again when it reaches the end.\n     */\n    loop: PropTypes.bool,\n\n    /**\n     * Show the portrait on the video.\n     */\n    showPortrait: PropTypes.bool,\n\n    /**\n     * Show the title on the video.\n     */\n    showTitle: PropTypes.bool,\n\n    /**\n     * Starts in a muted state to help with autoplay\n     */\n    muted: PropTypes.bool,\n\n    /**\n     * Starts in a background state with no controls to help with autoplay\n     */\n    background: PropTypes.bool,\n\n    /**\n     * Enable responsive mode and resize according to parent element (experimental)\n     */\n    responsive: PropTypes.bool,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the Vimeo player API has loaded.\n     * Receives the Vimeo player object in the first parameter.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n\n    /**\n     * Triggered when the video plays.\n     */\n    onPlay: PropTypes.func,\n\n    /**\n     * Triggered when the video pauses.\n     */\n    onPause: PropTypes.func,\n\n    /**\n     * Triggered any time the video playback reaches the end.\n     * Note: when `loop` is turned on, the ended event will not fire.\n     */\n    onEnd: PropTypes.func,\n\n    /**\n     * Triggered as the `currentTime` of the video updates. It generally fires\n     * every 250ms, but it may vary depending on the browser.\n     */\n    onTimeUpdate: PropTypes.func,\n\n    /**\n     * Triggered as the video is loaded. Reports back the amount of the video\n     * that has been buffered.\n     */\n    onProgress: PropTypes.func,\n\n    /**\n     * Triggered when the player seeks to a specific time. An `onTimeUpdate`\n     * event will also be fired at the same time.\n     */\n    onSeeked: PropTypes.func,\n\n    /**\n     * Triggered when the active text track (captions/subtitles) changes. The\n     * values will be `null` if text tracks are turned off.\n     */\n    onTextTrackChange: PropTypes.func,\n\n    /**\n     * Triggered when the active cue for the current text track changes. It also\n     * fires when the active text track changes. There may be multiple cues\n     * active.\n     */\n    onCueChange: PropTypes.func,\n\n    /**\n     * Triggered when the current time hits a registered cue point.\n     */\n    onCuePoint: PropTypes.func,\n\n    /**\n     * Triggered when the volume in the player changes. Some devices do not\n     * support setting the volume of the video independently from the system\n     * volume, so this event will never fire on those devices.\n     */\n    onVolumeChange: PropTypes.func,\n\n    /**\n     * Triggered when a new video is loaded in the player.\n     */\n    onLoaded: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n\n  };\n}\n\nVimeo.defaultProps = {\n  autopause: true,\n  autoplay: false,\n  showByline: true,\n  controls: true,\n  loop: false,\n  showPortrait: true,\n  showTitle: true,\n  muted: false,\n  background: false,\n  responsive: false\n};\nexport default Vimeo;","map":{"version":3,"sources":["/Users/quintenleysen/Documents/AZ_SINT_LUCAS/az_sint_lucas/client/node_modules/@u-wave/react-vimeo/dist/react-vimeo.es.js"],"names":["React","PropTypes","Player","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","_assertThisInitialized","self","ReferenceError","eventNames","play","pause","ended","timeupdate","progress","seeked","texttrackchange","cuechange","cuepoint","volumechange","error","loaded","Vimeo","_React$Component","props","_this","call","refContainer","bind","_proto","componentDidMount","createPlayer","componentDidUpdate","prevProps","_this2","changes","keys","filter","name","updateProps","componentWillUnmount","player","destroy","getInitialOptions","id","video","width","height","autopause","autoplay","byline","showByline","color","controls","loop","portrait","showPortrait","title","showTitle","muted","background","responsive","propNames","_this3","forEach","value","setAutopause","setColor","setLoop","setVolume","getPaused","then","paused","element","start","loadVideo","setCurrentTime","unload","_this4","_this$props","volume","container","dmName","reactName","on","event","handler","onReady","ready","render","_this$props2","className","createElement","ref","Component","process","env","NODE_ENV","propTypes","oneOfType","number","string","bool","func","onError","onPlay","onPause","onEnd","onTimeUpdate","onProgress","onSeeked","onTextTrackChange","onCueChange","onCuePoint","onVolumeChange","onLoaded","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Player from '@vimeo/player';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar eventNames = {\n  play: 'onPlay',\n  pause: 'onPause',\n  ended: 'onEnd',\n  timeupdate: 'onTimeUpdate',\n  progress: 'onProgress',\n  seeked: 'onSeeked',\n  texttrackchange: 'onTextTrackChange',\n  cuechange: 'onCueChange',\n  cuepoint: 'onCuePoint',\n  volumechange: 'onVolumeChange',\n  error: 'onError',\n  loaded: 'onLoaded'\n};\n\nvar Vimeo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Vimeo, _React$Component);\n\n  function Vimeo(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.refContainer = _this.refContainer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Vimeo.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.createPlayer();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    var changes = Object.keys(this.props).filter(function (name) {\n      return _this2.props[name] !== prevProps[name];\n    });\n    this.updateProps(changes);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.player.destroy();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.getInitialOptions = function getInitialOptions() {\n    /* eslint-disable react/destructuring-assignment */\n    return {\n      id: this.props.video,\n      width: this.props.width,\n      height: this.props.height,\n      autopause: this.props.autopause,\n      autoplay: this.props.autoplay,\n      byline: this.props.showByline,\n      color: this.props.color,\n      controls: this.props.controls,\n      loop: this.props.loop,\n      portrait: this.props.showPortrait,\n      title: this.props.showTitle,\n      muted: this.props.muted,\n      background: this.props.background,\n      responsive: this.props.responsive\n    };\n    /* eslint-enable react/destructuring-assignment */\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.updateProps = function updateProps(propNames) {\n    var _this3 = this;\n\n    var player = this.player;\n    propNames.forEach(function (name) {\n      // eslint-disable-next-line react/destructuring-assignment\n      var value = _this3.props[name];\n\n      switch (name) {\n        case 'autopause':\n          player.setAutopause(value);\n          break;\n\n        case 'color':\n          player.setColor(value);\n          break;\n\n        case 'loop':\n          player.setLoop(value);\n          break;\n\n        case 'volume':\n          player.setVolume(value);\n          break;\n\n        case 'paused':\n          player.getPaused().then(function (paused) {\n            if (value && !paused) {\n              return player.pause();\n            }\n\n            if (!value && paused) {\n              return player.play();\n            }\n\n            return null;\n          });\n          break;\n\n        case 'width':\n        case 'height':\n          player.element[name] = value;\n          break;\n\n        case 'video':\n          if (value) {\n            var start = _this3.props.start;\n            player.loadVideo(value); // Set the start time only when loading a new video.\n\n            if (typeof start === 'number') {\n              player.setCurrentTime(start);\n            }\n          } else {\n            player.unload();\n          }\n\n          break;\n\n        default: // Nothing\n\n      }\n    });\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.createPlayer = function createPlayer() {\n    var _this4 = this;\n\n    var _this$props = this.props,\n        start = _this$props.start,\n        volume = _this$props.volume;\n    this.player = new Player(this.container, this.getInitialOptions());\n    Object.keys(eventNames).forEach(function (dmName) {\n      var reactName = eventNames[dmName];\n\n      _this4.player.on(dmName, function (event) {\n        // eslint-disable-next-line react/destructuring-assignment\n        var handler = _this4.props[reactName];\n\n        if (handler) {\n          handler(event);\n        }\n      });\n    });\n    var onReady = this.props.onReady;\n\n    if (onReady) {\n      this.player.ready().then(function () {\n        onReady(_this4.player);\n      });\n    }\n\n    if (typeof start === 'number') {\n      this.player.setCurrentTime(start);\n    }\n\n    if (typeof volume === 'number') {\n      this.updateProps(['volume']);\n    }\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.refContainer = function refContainer(container) {\n    this.container = container;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        id = _this$props2.id,\n        className = _this$props2.className;\n    return React.createElement(\"div\", {\n      id: id,\n      className: className,\n      ref: this.refContainer\n    });\n  };\n\n  return Vimeo;\n}(React.Component);\n\nif (process.env.NODE_ENV !== 'production') {\n  Vimeo.propTypes = {\n    /**\n     * A Vimeo video ID or URL.\n     */\n    video: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * DOM ID for the player element.\n     */\n    id: PropTypes.string,\n\n    /**\n     * CSS className for the player element.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Width of the player element.\n     */\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Height of the player element.\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    /**\n     * Pause the video.\n     */\n    paused: PropTypes.bool,\n    // eslint-disable-line react/no-unused-prop-types\n\n    /**\n     * The playback volume as a number between 0 and 1.\n     */\n    volume: PropTypes.number,\n\n    /**\n     * The time in seconds at which to start playing the video.\n     */\n    start: PropTypes.number,\n    // Player parameters\n\n    /**\n     * Pause this video automatically when another one plays.\n     */\n    autopause: PropTypes.bool,\n\n    /**\n     * Automatically start playback of the video. Note that this wonâ€™t work on\n     * some devices.\n     */\n    autoplay: PropTypes.bool,\n\n    /**\n     * Show the byline on the video.\n     */\n    showByline: PropTypes.bool,\n\n    /**\n     * Specify the color of the video controls. Colors may be overridden by the\n     * embed settings of the video. _(Ex: \"ef2f9f\")_\n     */\n    color: PropTypes.string,\n    // Player controls\n\n    /**\n     * Hide all elements in the player (play bar, sharing buttons, etc).\n     */\n    controls: PropTypes.bool,\n\n    /**\n     * Play the video again when it reaches the end.\n     */\n    loop: PropTypes.bool,\n\n    /**\n     * Show the portrait on the video.\n     */\n    showPortrait: PropTypes.bool,\n\n    /**\n     * Show the title on the video.\n     */\n    showTitle: PropTypes.bool,\n\n    /**\n     * Starts in a muted state to help with autoplay\n     */\n    muted: PropTypes.bool,\n\n    /**\n     * Starts in a background state with no controls to help with autoplay\n     */\n    background: PropTypes.bool,\n\n    /**\n     * Enable responsive mode and resize according to parent element (experimental)\n     */\n    responsive: PropTypes.bool,\n    // Events\n\n    /* eslint-disable react/no-unused-prop-types */\n\n    /**\n     * Sent when the Vimeo player API has loaded.\n     * Receives the Vimeo player object in the first parameter.\n     */\n    onReady: PropTypes.func,\n\n    /**\n     * Sent when the player triggers an error.\n     */\n    onError: PropTypes.func,\n\n    /**\n     * Triggered when the video plays.\n     */\n    onPlay: PropTypes.func,\n\n    /**\n     * Triggered when the video pauses.\n     */\n    onPause: PropTypes.func,\n\n    /**\n     * Triggered any time the video playback reaches the end.\n     * Note: when `loop` is turned on, the ended event will not fire.\n     */\n    onEnd: PropTypes.func,\n\n    /**\n     * Triggered as the `currentTime` of the video updates. It generally fires\n     * every 250ms, but it may vary depending on the browser.\n     */\n    onTimeUpdate: PropTypes.func,\n\n    /**\n     * Triggered as the video is loaded. Reports back the amount of the video\n     * that has been buffered.\n     */\n    onProgress: PropTypes.func,\n\n    /**\n     * Triggered when the player seeks to a specific time. An `onTimeUpdate`\n     * event will also be fired at the same time.\n     */\n    onSeeked: PropTypes.func,\n\n    /**\n     * Triggered when the active text track (captions/subtitles) changes. The\n     * values will be `null` if text tracks are turned off.\n     */\n    onTextTrackChange: PropTypes.func,\n\n    /**\n     * Triggered when the active cue for the current text track changes. It also\n     * fires when the active text track changes. There may be multiple cues\n     * active.\n     */\n    onCueChange: PropTypes.func,\n\n    /**\n     * Triggered when the current time hits a registered cue point.\n     */\n    onCuePoint: PropTypes.func,\n\n    /**\n     * Triggered when the volume in the player changes. Some devices do not\n     * support setting the volume of the video independently from the system\n     * volume, so this event will never fire on those devices.\n     */\n    onVolumeChange: PropTypes.func,\n\n    /**\n     * Triggered when a new video is loaded in the player.\n     */\n    onLoaded: PropTypes.func\n    /* eslint-enable react/no-unused-prop-types */\n\n  };\n}\n\nVimeo.defaultProps = {\n  autopause: true,\n  autoplay: false,\n  showByline: true,\n  controls: true,\n  loop: false,\n  showPortrait: true,\n  showTitle: true,\n  muted: false,\n  background: false,\n  responsive: false\n};\n\nexport default Vimeo;\n"]},"metadata":{},"sourceType":"module"}