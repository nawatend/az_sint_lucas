{"ast":null,"code":"import * as PIXI from 'pixi.js';\nimport { imageConfig } from '../../config';\nexport default class Player {\n  constructor(renderer, stage = PIXI.Container) {\n    // Set default values\n    this.hit = 0;\n    this.dragging = false;\n    this.data = null;\n    this.parent = null;\n    this.renderer = renderer; // Sprite setup from image\n\n    const sprite = PIXI.Sprite.from(imageConfig.player);\n    sprite.interactive = true;\n    sprite.buttonMode = true;\n    sprite.anchor.set(0.5);\n    sprite.x = renderer.width / 2;\n    sprite.y = renderer.height / 2;\n    sprite.width = 64;\n    sprite.height = 64; // Add Sprite to stage\n\n    this.sprite = sprite;\n    this.setDraggable(true);\n    this.stage = stage;\n    stage.addChild(sprite);\n  }\n\n  setDraggable(state) {\n    if (state) {\n      this.sprite.on('pointerdown', this.onDragStart).on('pointerup', this.onDragEnd).on('pointerupoutside', this.onDragEnd).on('pointermove', this.onDragMove);\n    } else {\n      this.sprite.off('pointerdown', this.onDragStart).off('pointerup', this.onDragEnd).off('pointerupoutside', this.onDragEnd).off('pointermove', this.onDragMove);\n    }\n  } // Reset position\n\n\n  reset() {\n    this.sprite.x = this.renderer.width / 2;\n    this.sprite.y = this.renderer.height / 2;\n  } // Enable dragging\n\n\n  onDragStart(event) {\n    this.dragging = true;\n    this.data = event.data;\n  } // End dragging\n\n\n  onDragEnd() {\n    this.dragging = false;\n    this.data = null;\n  } // Update position on drag move\n\n\n  onDragMove() {\n    if (this.dragging) {\n      const newPos = this.data.getLocalPosition(this.parent);\n      this.x = newPos.x;\n      this.y = newPos.y;\n    }\n  } // Contain character within container\n\n\n  containCharacter(renderer) {\n    this.contain(this.sprite, {\n      x: 20,\n      y: 20,\n      width: renderer.width + 35,\n      height: renderer.height + 35\n    });\n  }\n\n  contain(sprite, container) {\n    let collision = null; // Left\n\n    if (sprite.x < container.x) {\n      sprite.x = container.x;\n      collision = 'left';\n    } // Top\n\n\n    if (sprite.y < container.y) {\n      sprite.y = container.y;\n      collision = 'top';\n    } // Right\n\n\n    if (sprite.x + sprite.width > container.width) {\n      sprite.x = container.width - sprite.width;\n      collision = 'right';\n    } // Bottom\n\n\n    if (sprite.y + sprite.height > container.height) {\n      sprite.y = container.height - sprite.height;\n      collision = 'bottom';\n    } // Return the `collision` value\n\n\n    return collision;\n  }\n\n}","map":{"version":3,"sources":["/Users/quintenleysen/Documents/SINT_LUCAS/az_sint_lucas/client/src/components/games/virus-game/components/characters/Player.js"],"names":["PIXI","imageConfig","Player","constructor","renderer","stage","Container","hit","dragging","data","parent","sprite","Sprite","from","player","interactive","buttonMode","anchor","set","x","width","y","height","setDraggable","addChild","state","on","onDragStart","onDragEnd","onDragMove","off","reset","event","newPos","getLocalPosition","containCharacter","contain","container","collision"],"mappings":"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","sourcesContent":["import * as PIXI from 'pixi.js';\nimport { imageConfig } from '../../config';\n\nexport default class Player {\n    constructor(renderer, stage = PIXI.Container) {\n    // Set default values\n        this.hit = 0;\n        this.dragging = false;\n        this.data = null;\n        this.parent = null;\n        this.renderer = renderer;\n\n        // Sprite setup from image\n        const sprite = PIXI.Sprite.from(imageConfig.player);\n        sprite.interactive = true;\n        sprite.buttonMode = true;\n        sprite.anchor.set(0.5);\n\n        sprite.x = renderer.width / 2;\n        sprite.y = renderer.height / 2;\n\n        sprite.width = 64;\n        sprite.height = 64;\n\n        // Add Sprite to stage\n        this.sprite = sprite;\n        this.setDraggable(true);\n        this.stage = stage;\n        stage.addChild(sprite);\n    }\n\n    setDraggable(state) {\n        if (state) {\n            this.sprite\n                .on('pointerdown', this.onDragStart)\n                .on('pointerup', this.onDragEnd)\n                .on('pointerupoutside', this.onDragEnd)\n                .on('pointermove', this.onDragMove);\n        } else {\n            this.sprite\n                .off('pointerdown', this.onDragStart)\n                .off('pointerup', this.onDragEnd)\n                .off('pointerupoutside', this.onDragEnd)\n                .off('pointermove', this.onDragMove);\n        }\n    }\n\n    // Reset position\n    reset() {\n        this.sprite.x = this.renderer.width / 2;\n        this.sprite.y = this.renderer.height / 2;\n    }\n\n    // Enable dragging\n    onDragStart(event) {\n        this.dragging = true;\n        this.data = event.data;\n    }\n\n    // End dragging\n    onDragEnd() {\n        this.dragging = false;\n        this.data = null;\n    }\n\n    // Update position on drag move\n    onDragMove() {\n        if (this.dragging) {\n            const newPos = this.data.getLocalPosition(this.parent);\n            this.x = newPos.x;\n            this.y = newPos.y;\n        }\n    }\n\n    // Contain character within container\n    containCharacter(renderer) {\n        this.contain(this.sprite, {\n            x: 20, y: 20, width: renderer.width + 35, height: renderer.height + 35,\n        });\n    }\n\n    contain(sprite, container) {\n        let collision = null;\n\n        // Left\n        if (sprite.x < container.x) {\n            sprite.x = container.x;\n            collision = 'left';\n        }\n\n        // Top\n        if (sprite.y < container.y) {\n            sprite.y = container.y;\n            collision = 'top';\n        }\n\n        // Right\n        if (sprite.x + sprite.width > container.width) {\n            sprite.x = container.width - sprite.width;\n            collision = 'right';\n        }\n\n        // Bottom\n        if (sprite.y + sprite.height > container.height) {\n            sprite.y = container.height - sprite.height;\n            collision = 'bottom';\n        }\n\n        // Return the `collision` value\n        return collision;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}