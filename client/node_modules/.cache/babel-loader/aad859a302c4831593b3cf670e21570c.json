{"ast":null,"code":"import _slicedToArray from \"/Users/quintenleysen/Documents/SINT_LUCAS/az_sint_lucas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/quintenleysen/Documents/SINT_LUCAS/az_sint_lucas/client/src/pages/persons/personDetail.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PersonLayout from '../../layouts/personBase';\nimport { useParams } from \"react-router-dom\";\nimport TagCloud from 'react-tag-cloud';\nimport Loading from '../../components/Loading'; //firebase\n\nimport { db, storage } from '../../utils/firebase';\n\nconst PersonDetailPage = ({\n  match\n}) => {\n  let terms = ['lachen', 'hello', 'spannend', 'Noodle', 'opbsadsadeeun', 'kinding'];\n\n  let _useParams = useParams(),\n      person = _useParams.person,\n      id = _useParams.id;\n\n  let imagesFileName = {\n    fotodokter: \"photo_doctor_image\",\n    kinderdokter: \"kid_doctor_image\",\n    ziekenhuisclowns: \"clown_image\",\n    slaapdokter: \"sleep_doctor_image\",\n    verpleegkundige: \"nurse_image\",\n    spelbegeleider: \"game_leader_image\",\n    kiderpsycholoog: \"kid_psychology_image\"\n  };\n  const personRef = db.ref(`/who_is_who/${id}`);\n  const personImageRef = storage.ref().child(`images/persons/${imagesFileName[person]}.jpg`);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLandscape = _useState2[0],\n        setIsLandscape = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imageUrl = _useState4[0],\n        setImageUrl = _useState4[1];\n\n  const _useState5 = useState({\n    'audio': \"test.mp3\",\n    'description': \"Geen Description\",\n    'id': 0,\n    'image': \"unnamed.jpg\",\n    'title': \"testdokter\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        personInfo = _useState6[0],\n        setPersonInfo = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  let checkScreen = media => {\n    if (media.matches) {\n      setIsLandscape(true);\n    } else {\n      setIsLandscape(false);\n    }\n  };\n\n  useEffect(() => {\n    let media = window.matchMedia(\"(orientation: landscape)\");\n    checkScreen(media);\n    media.addListener(checkScreen);\n\n    const getPersonImage = async () => {\n      personImageRef.getDownloadURL().then(function (url) {\n        setImageUrl(url);\n      }).catch(function (error) {// Handle any errors\n      });\n    };\n\n    const getPersonsInfo = () => {\n      personRef.once('value', snapshots => {\n        let data = snapshots.val();\n        return data;\n      }).then(data => {\n        setPersonInfo(data.val());\n        setLoading(false);\n      });\n    };\n\n    if (loading) {\n      getPersonImage().then(() => {\n        getPersonsInfo();\n      });\n    }\n  }, [loading, personImageRef, personRef]);\n  useEffect(() => {\n    console.log(person);\n  }, [match, person]);\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"person__content__detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content__person__detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"person__detail__image\",\n      style: {\n        backgroundImage: `url(${imageUrl})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"person__detail__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, personInfo.description), React.createElement(\"div\", {\n      className: \"person__detail__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, person), React.createElement(\"div\", {\n      className: \"person__detail__mind\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `${process.env.PUBLIC_URL}/svgs/person/thinking.svg`,\n      alt: \"Thinking bubble\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mind__terms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `${process.env.PUBLIC_URL}/svgs/person/mind_terms.svg`,\n      alt: \"Thinking bubble main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mind__terms--text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(TagCloud, {\n      style: {\n        fontFamily: 'Laca',\n        fontWeight: 'bold',\n        color: 'ee7358',\n        padding: 4,\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, terms.map((term, i) => React.createElement(\"div\", {\n      key: terms + i,\n      className: i % 2 === 0 ? \"cloud__word--l\" : \"cloud__word--s\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, term))))))), !isLandscape ? React.createElement(\"div\", {\n      className: \"rotate__device\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `${process.env.PUBLIC_URL}/svgs/rotate_device2.svg`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })) : \"\");\n  }\n};\n\nexport default PersonLayout(PersonDetailPage);","map":{"version":3,"sources":["/Users/quintenleysen/Documents/SINT_LUCAS/az_sint_lucas/client/src/pages/persons/personDetail.jsx"],"names":["React","useEffect","useState","PersonLayout","useParams","TagCloud","Loading","db","storage","PersonDetailPage","match","terms","person","id","imagesFileName","fotodokter","kinderdokter","ziekenhuisclowns","slaapdokter","verpleegkundige","spelbegeleider","kiderpsycholoog","personRef","ref","personImageRef","child","isLandscape","setIsLandscape","imageUrl","setImageUrl","personInfo","setPersonInfo","loading","setLoading","checkScreen","media","matches","window","matchMedia","addListener","getPersonImage","getDownloadURL","then","url","catch","error","getPersonsInfo","once","snapshots","data","val","console","log","backgroundImage","description","process","env","PUBLIC_URL","fontFamily","fontWeight","color","padding","width","height","map","term","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PersonLayout from '../../layouts/personBase';\nimport { useParams } from \"react-router-dom\";\nimport TagCloud from 'react-tag-cloud'\n\nimport Loading from '../../components/Loading'\n\n//firebase\nimport { db, storage } from '../../utils/firebase'\n\n\nconst PersonDetailPage = ({ match }) => {\n\n\n    let terms = ['lachen', 'hello', 'spannend', 'Noodle', 'opbsadsadeeun', 'kinding']\n    let { person, id } = useParams()\n\n    let imagesFileName = {\n        fotodokter: \"photo_doctor_image\",\n        kinderdokter: \"kid_doctor_image\",\n        ziekenhuisclowns: \"clown_image\",\n        slaapdokter: \"sleep_doctor_image\",\n        verpleegkundige: \"nurse_image\",\n        spelbegeleider: \"game_leader_image\",\n        kiderpsycholoog: \"kid_psychology_image\"\n    }\n\n\n    const personRef = db.ref(`/who_is_who/${id}`)\n    const personImageRef = storage.ref().child(`images/persons/${imagesFileName[person]}.jpg`)\n\n    const [isLandscape, setIsLandscape] = useState(true)\n    const [imageUrl, setImageUrl] = useState(\"\")\n    const [personInfo, setPersonInfo] = useState({\n        'audio': \"test.mp3\",\n        'description': \"Geen Description\",\n        'id': 0,\n        'image': \"unnamed.jpg\",\n        'title': \"testdokter\",\n    })\n    const [loading, setLoading] = useState(true)\n\n    let checkScreen = (media) => {\n        if (media.matches) {\n            setIsLandscape(true)\n        } else {\n            setIsLandscape(false)\n        }\n    }\n\n    useEffect(() => {\n        let media = window.matchMedia(\"(orientation: landscape)\")\n        checkScreen(media)\n        media.addListener(checkScreen)\n\n\n        const getPersonImage = async () => {\n            personImageRef.getDownloadURL().then(function (url) {\n\n                setImageUrl(url)\n\n            }).catch(function (error) {\n                // Handle any errors\n            });\n        }\n\n        const getPersonsInfo = () => {\n            personRef.once('value', (snapshots) => {\n\n                let data = snapshots.val()\n                return data\n            }).then((data) => {\n                setPersonInfo(data.val())\n                setLoading(false)\n            });\n        }\n\n\n\n\n        if (loading) {\n            getPersonImage().then(() => {\n                getPersonsInfo()\n            })\n        }\n\n\n    }, [loading, personImageRef, personRef])\n\n    useEffect(() => {\n        console.log(person)\n    }, [match, person])\n\n\n    if (loading) {\n        return (<Loading />)\n    } else {\n        return (\n            <div className=\"page\">\n\n                <div className=\"person__content__detail\">\n                    <div className=\"content__person__detail\">\n                        <div className=\"person__detail__image\" style={{ backgroundImage: `url(${imageUrl})` }}>\n                        </div>\n                        <div className=\"person__detail__text\">\n                            {personInfo.description}\n                        </div>\n                        <div className=\"person__detail__title\">{person}</div>\n\n                        <div className=\"person__detail__mind\">\n                            <img src={`${process.env.PUBLIC_URL}/svgs/person/thinking.svg`} alt=\"Thinking bubble\" />\n\n                        </div>\n                        <div className=\"mind__terms\" >\n                            <img src={`${process.env.PUBLIC_URL}/svgs/person/mind_terms.svg`} alt=\"Thinking bubble main\" />\n                            <div className=\"mind__terms--text\">\n                                <TagCloud\n                                    style={{\n                                        fontFamily: 'Laca',\n                                        fontWeight: 'bold',\n\n                                        color: 'ee7358',\n                                        padding: 4,\n                                        width: '100%',\n                                        height: '100%'\n                                    }}>\n\n                                    {terms.map((term, i) => (\n                                        <div key={terms + i} className={(i % 2 === 0) ? \"cloud__word--l\" : \"cloud__word--s\"}>{term}</div>\n                                    ))}\n\n                                </TagCloud>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {!isLandscape ? (<div className=\"rotate__device\"><img src={`${process.env.PUBLIC_URL}/svgs/rotate_device2.svg`} alt=\"\" /></div>) : \"\"}\n            </div >\n        )\n    }\n}\nexport default PersonLayout(PersonDetailPage);"]},"metadata":{},"sourceType":"module"}