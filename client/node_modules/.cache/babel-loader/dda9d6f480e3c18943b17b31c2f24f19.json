{"ast":null,"code":"import _slicedToArray from \"/Users/quintenleysen/Documents/SINT_LUCAS/az_sint_lucas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/quintenleysen/Documents/SINT_LUCAS/az_sint_lucas/client/src/pages/tours/tourDetail.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport TourLayout from '../../layouts/tourBase';\nimport { Pannellum } from 'pannellum-react';\nimport Lucas from '../../components/Lucas';\nimport { useParams } from \"react-router-dom\";\nimport Loading from '../../components/Loading'; //firebase\n\nimport { db, storage } from '../../utils/firebase';\n\nconst TourDetailPage = ({\n  match\n}) => {\n  let _useParams = useParams(),\n      roomName = _useParams.roomName;\n\n  let tourSpotsRef = db.ref(`/rooms/${roomName}`);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLandscape = _useState2[0],\n        setIsLandscape = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        infoSpots = _useState6[0],\n        setInfoSpots = _useState6[1];\n\n  let checkScreen = media => {\n    if (media.matches) {\n      setIsLandscape(true);\n    } else {\n      setIsLandscape(false);\n    }\n  };\n\n  useEffect(() => {\n    let media = window.matchMedia(\"(orientation: landscape)\");\n    checkScreen(media);\n    media.addListener(checkScreen);\n  }, []);\n  useEffect(() => {\n    const getTourSpots = () => {\n      tourSpotsRef.once('value', snapshots => {\n        setInfoSpots(snapshots.val());\n        setLoading(false);\n      });\n    };\n\n    if (loading) {\n      getTourSpots();\n    }\n  }, [loading, tourSpotsRef]);\n\n  let hotspot = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute('style', `background-image: url(\"${process.env.PUBLIC_URL}/svgs/tour/vraagteken.svg\")`);\n    hotSpotDiv.classList.add('custom-tooltip');\n    var span = document.createElement('span');\n    span.innerHTML = args;\n    hotSpotDiv.appendChild(span);\n    span.style.width = span.scrollWidth - 20 + 'px';\n    span.style.marginLeft = -(span.scrollWidth - hotSpotDiv.offsetWidth) / 2 + 'px';\n    span.style.marginTop = -span.scrollHeight - 12 + 'px';\n    console.log(hotSpotDiv);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Tour Detail => \", roomName, React.createElement(\"div\", {\n    className: \"tour__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content__image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Pannellum, {\n    width: \"100%\",\n    height: \"100%\",\n    image: `${process.env.PUBLIC_URL}/images/360tours/${roomName}.jpg`,\n    pitch: -0.28,\n    yaw: -0.839,\n    hfov: 110,\n    autoLoad: true,\n    onLoad: () => {\n      console.log(\"panorama loaded\");\n    } //hotspotDebug\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, Object.keys(infoSpots).map((key, i) => {\n    // return (\n    //     <Pannellum.Hotspot\n    //         key={i}\n    //         type=\"info\"\n    //         pitch={infoSpots[key].pitch}\n    //         yaw={infoSpots[key].yaw}\n    //         text={infoSpots[key].description}\n    ///>)\n    return React.createElement(Pannellum.Hotspot, {\n      key: i,\n      type: \"custom\",\n      pitch: infoSpots[key].pitch,\n      yaw: infoSpots[key].yaw,\n      cssClass: \"custom-hotspot\",\n      tooltip: hotspot,\n      tooltipArg: infoSpots[key].description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n  })))), !isLandscape ? React.createElement(\"div\", {\n    className: \"rotate__device\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: `${process.env.PUBLIC_URL}/svgs/rotate_device2.svg`,\n    alt: \"LOADING ...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })) : \"\", React.createElement(Lucas, {\n    type: \"LOOK\",\n    title: roomName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nexport default TourLayout(TourDetailPage);","map":{"version":3,"sources":["/Users/quintenleysen/Documents/SINT_LUCAS/az_sint_lucas/client/src/pages/tours/tourDetail.jsx"],"names":["React","useEffect","useState","TourLayout","Pannellum","Lucas","useParams","Loading","db","storage","TourDetailPage","match","roomName","tourSpotsRef","ref","isLandscape","setIsLandscape","loading","setLoading","infoSpots","setInfoSpots","checkScreen","media","matches","window","matchMedia","addListener","getTourSpots","once","snapshots","val","hotspot","hotSpotDiv","args","setAttribute","process","env","PUBLIC_URL","classList","add","span","document","createElement","innerHTML","appendChild","style","width","scrollWidth","marginLeft","offsetWidth","marginTop","scrollHeight","console","log","Object","keys","map","key","i","pitch","yaw","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TourLayout from '../../layouts/tourBase';\nimport { Pannellum } from 'pannellum-react'\nimport Lucas from '../../components/Lucas'\nimport { useParams } from \"react-router-dom\";\nimport Loading from '../../components/Loading'\n//firebase\nimport { db, storage } from '../../utils/firebase'\n\n\nconst TourDetailPage = ({ match }) => {\n\n    let { roomName } = useParams()\n\n    let tourSpotsRef = db.ref(`/rooms/${roomName}`)\n    const [isLandscape, setIsLandscape] = useState(true)\n    const [loading, setLoading] = useState(true)\n    const [infoSpots, setInfoSpots] = useState({})\n\n    let checkScreen = (media) => {\n        if (media.matches) {\n            setIsLandscape(true)\n        } else {\n            setIsLandscape(false)\n        }\n    }\n\n    useEffect(() => {\n        let media = window.matchMedia(\"(orientation: landscape)\")\n        checkScreen(media)\n        media.addListener(checkScreen)\n    }, [])\n\n    useEffect(() => {\n\n        const getTourSpots = () => {\n            tourSpotsRef.once('value', (snapshots) => {\n                setInfoSpots(snapshots.val())\n                setLoading(false)\n            })\n        }\n\n        if (loading) {\n            getTourSpots()\n        }\n\n    }, [loading, tourSpotsRef])\n\n    let hotspot = (hotSpotDiv, args) => {\n\n        hotSpotDiv.setAttribute('style', `background-image: url(\"${process.env.PUBLIC_URL}/svgs/tour/vraagteken.svg\")`)\n        hotSpotDiv.classList.add('custom-tooltip');\n        var span = document.createElement('span');\n        span.innerHTML = args;\n        hotSpotDiv.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - hotSpotDiv.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n        console.log(hotSpotDiv)\n    }\n\n    return (\n        <div className=\"page\">\n            Tour Detail => {roomName}\n            <div className=\"tour__content\">\n                <div className=\"content__image\">\n\n\n                    <Pannellum\n                        width=\"100%\"\n                        height=\"100%\"\n                        image={`${process.env.PUBLIC_URL}/images/360tours/${roomName}.jpg`}\n                        pitch={-0.28}\n                        yaw={-0.839}\n                        hfov={110}\n                        autoLoad\n                        onLoad={() => {\n                            console.log(\"panorama loaded\");\n                        }}\n                    //hotspotDebug\n                    >\n\n\n                        {Object.keys(infoSpots).map((key, i) => {\n                            // return (\n                            //     <Pannellum.Hotspot\n                            //         key={i}\n                            //         type=\"info\"\n                            //         pitch={infoSpots[key].pitch}\n                            //         yaw={infoSpots[key].yaw}\n                            //         text={infoSpots[key].description}\n                            ///>)\n\n                            return (\n                                <Pannellum.Hotspot\n                                    key={i}\n                                    type=\"custom\"\n                                    pitch={infoSpots[key].pitch}\n                                    yaw={infoSpots[key].yaw}\n                                    cssClass=\"custom-hotspot\"\n                                    tooltip={hotspot}\n                                    tooltipArg={infoSpots[key].description}\n                                />)\n                        })}\n\n                    </Pannellum>\n                </div>\n            </div>\n            {!isLandscape ? (<div className=\"rotate__device\"><img src={`${process.env.PUBLIC_URL}/svgs/rotate_device2.svg`} alt=\"LOADING ...\" /></div>) : \"\"}\n            <Lucas type=\"LOOK\" title={roomName} />\n        </div >\n    )\n}\nexport default TourLayout(TourDetailPage);"]},"metadata":{},"sourceType":"module"}