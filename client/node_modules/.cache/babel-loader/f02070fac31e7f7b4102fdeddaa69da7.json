{"ast":null,"code":"import _slicedToArray from \"/Users/quintenleysen/Documents/AZ_SINT_LUCAS/az_sint_lucas/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/quintenleysen/Documents/AZ_SINT_LUCAS/az_sint_lucas/client/src/components/games/bag/BagGame.jsx\";\nimport React, { useEffect, useState } from 'react';\nexport default function BagGame() {\n  // TODO\n  // order of className elements are importants, organs and labels should be in same order,\n  // if first element of same className of organs is heart, then first element of labels element should be heart\n  // in our case stomach, small intestine, large intestine, lungs, heart, liver and kidney\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        clickCount = _useState2[0],\n        setClickCount = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameOver = _useState4[0],\n        setGameOver = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        labelSelected = _useState6[0],\n        setLabelSelected = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        organSelected = _useState8[0],\n        setOrganSelected = _useState8[1];\n\n  const organsToRemove = [];\n\n  const selectOrgan = e => {\n    console.log(e.target.parentNode.dataset.organ);\n    setOrganSelected(e.target.parentNode.dataset.organ);\n  };\n\n  const selectLabel = e => {\n    console.log(e.target.parentNode.dataset.organ); // setLabelSelected(e.target.parentNode)\n  };\n\n  useEffect(() => {\n    if (labelSelected === organSelected) {\n      console.log(\"WE HAVE A MATCH\");\n      organsToRemove.push(organSelected);\n    }\n  }, [labelSelected, organSelected, organsToRemove]);\n  return React.createElement(\"div\", {\n    className: \"game__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/quintenleysen/Documents/AZ_SINT_LUCAS/az_sint_lucas/client/src/components/games/bag/BagGame.jsx"],"names":["React","useEffect","useState","BagGame","clickCount","setClickCount","gameOver","setGameOver","labelSelected","setLabelSelected","organSelected","setOrganSelected","organsToRemove","selectOrgan","e","console","log","target","parentNode","dataset","organ","selectLabel","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,OAAT,GAAmB;AAClC;AACI;AACA;AACA;AAJ8B,oBAKMD,QAAQ,CAAC,CAAD,CALd;AAAA;AAAA,QAKvBE,UALuB;AAAA,QAKXC,aALW;;AAAA,qBAMEH,QAAQ,CAAC,KAAD,CANV;AAAA;AAAA,QAMvBI,QANuB;AAAA,QAMbC,WANa;;AAAA,qBAQYL,QAAQ,EARpB;AAAA;AAAA,QAQvBM,aARuB;AAAA,QAQRC,gBARQ;;AAAA,qBASYP,QAAQ,EATpB;AAAA;AAAA,QASvBQ,aATuB;AAAA,QASRC,gBATQ;;AAU9B,QAAMC,cAAc,GAAG,EAAvB;;AAEA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,UAAT,CAAoBC,OAApB,CAA4BC,KAAxC;AACAT,IAAAA,gBAAgB,CAACG,CAAC,CAACG,MAAF,CAASC,UAAT,CAAoBC,OAApB,CAA4BC,KAA7B,CAAhB;AACH,GAHD;;AAKA,QAAMC,WAAW,GAAIP,CAAD,IAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,UAAT,CAAoBC,OAApB,CAA4BC,KAAxC,EADuB,CAEvB;AACH,GAHD;;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIO,aAAa,KAAKE,aAAtB,EAAqC;AACjCK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAJ,MAAAA,cAAc,CAACU,IAAf,CAAoBZ,aAApB;AACH;AAEJ,GAPQ,EAON,CAACF,aAAD,EAAgBE,aAAhB,EAA+BE,cAA/B,CAPM,CAAT;AASA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport default function BagGame() {\n// TODO\n    // order of className elements are importants, organs and labels should be in same order,\n    // if first element of same className of organs is heart, then first element of labels element should be heart\n    // in our case stomach, small intestine, large intestine, lungs, heart, liver and kidney\n    const [clickCount, setClickCount] = useState(0)\n    const [gameOver, setGameOver] = useState(false)\n\n    const [labelSelected, setLabelSelected] = useState()\n    const [organSelected, setOrganSelected] = useState()\n    const organsToRemove = []\n\n    const selectOrgan = (e) => {\n        console.log(e.target.parentNode.dataset.organ)\n        setOrganSelected(e.target.parentNode.dataset.organ)\n    }\n\n    const selectLabel = (e) => {\n        console.log(e.target.parentNode.dataset.organ)\n        // setLabelSelected(e.target.parentNode)\n    }\n    useEffect(() => {\n\n        if (labelSelected === organSelected) {\n            console.log(\"WE HAVE A MATCH\")\n            organsToRemove.push(organSelected)\n        }\n\n    }, [labelSelected, organSelected, organsToRemove])\n\n    return (\n        <div className=\"game__container\">\n            \n            \n            \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}